class MinStack {
public:
    vector<pair<int,int>>v;
    int mini=INT_MAX,n=0;

    MinStack() {
        
    }
    
    void push(int val) {
        mini=min(val,mini);
        v.push_back({val,mini});
        n++;
    }
    
    void pop() {
        if(v.empty())
        return;
        else
        {
            v.pop_back();
            n--;
            if (n > 0) 
            {
            mini = v[n - 1].second;
            }
            else 
            {
            mini = INT_MAX;
            }
        }
    }
    
    int top() {
        if(v.empty())
        return -1;
        else
        return v[n-1].first;
    }
    
    int getMin() {
         if(v.empty())
        return -1;
        else
        return v[n-1].second;
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(val);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */
